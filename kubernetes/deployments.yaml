apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: exam
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
        - name: check-db-ready
          image: postgres:latest
          command: ['sh', '-c', 
            'until pg_isready -h postgres-container.exam.svc.cluster.local -p 5432; 
            do echo waiting for database; sleep 2; done;']
      containers:
        - name: backend
          image: chahidhadifi/my-backend-image:latest
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: backend-config
            - secretRef:
                name: backend-secret
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1024Mi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: exam
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: chahidhadifi/my-frontend-image:latest
          ports:
            - containerPort: 5173
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-container
  namespace: exam
spec:
  serviceName: "postgres-container"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          envFrom:
            - configMapRef:
                name: postgres-config
            - secretRef:
                name: postgres-secret
          ports:
            - containerPort: 5432
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          command:
            - "docker-entrypoint.sh"
            - "-c"
            - "max_connections=100"
            - "-c"
            - "shared_buffers=256MB"
      volumes:
        - name: postgres-storage
          emptyDir: {}