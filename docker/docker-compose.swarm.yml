services:
  postgres-container:
    image: postgres
    env_file:
      - ../backend/sms/.env.list
    networks:
      my-network:
        aliases:
          - postgres-container
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
      restart_policy:
        condition: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postgres.rule=Host(`db.localhost`)"
      - "traefik.http.services.postgres.loadbalancer.server.port=5432"

  backend-container:
    image: chahidhadifi/my-backend-image:latest
    networks:
      my-network:
        aliases:
          - backend-container
    ports:
      - "8080:8080"
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "2"
          memory: "1G"
        reservations:
          cpus: "1"
          memory: "512M"
      restart_policy:
        condition: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`backend.localhost`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"

  frontend-container:
    image: chahidhadifi/my-frontend-image:latest
    networks:
      my-network:
        aliases:
          - frontend-container
    ports:
      - "5173:5173"
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
      restart_policy:
        condition: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`frontend.localhost`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"

  reverse-proxy:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      my-network:
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

networks:
  my-network:
    driver: overlay

volumes:
  pgdata:
    driver: local
